//EntityType AutoGenerated by tool
using Microsoft.Extensions.DependencyInjection;
using System.ComponentModel.DataAnnotations;
using DataOperations.OData; 
using DataOperations; 

namespace API_SALES_ORDER_SRV
{

    public class A_SalesOrderScheduleLineType : BaseDTOWithIDAndETag
    {
        private string _SalesOrder;
        public string SalesOrder 
        { 
            get {
                return _SalesOrder;
            }
            set {
                if(value == null)
                {
                    throw new ValidationException("SalesOrder cannot be null and must have a value.");
                }
                if(value.Length > 10)
                {
                    throw new ValidationException("SalesOrder cannot be longer than 10 characters.");
                }
                else
                {
                    _SalesOrder = value;
                }
            }
        }
        private string _SalesOrderItem;
        public string SalesOrderItem 
        { 
            get {
                return _SalesOrderItem;
            }
            set {
                if(value == null)
                {
                    throw new ValidationException("SalesOrderItem cannot be null and must have a value.");
                }
                if(value.Length > 6)
                {
                    throw new ValidationException("SalesOrderItem cannot be longer than 6 characters.");
                }
                else
                {
                    _SalesOrderItem = value;
                }
            }
        }
        private string _ScheduleLine;
        public string ScheduleLine 
        { 
            get {
                return _ScheduleLine;
            }
            set {
                if(value == null)
                {
                    throw new ValidationException("ScheduleLine cannot be null and must have a value.");
                }
                if(value.Length > 4)
                {
                    throw new ValidationException("ScheduleLine cannot be longer than 4 characters.");
                }
                else
                {
                    _ScheduleLine = value;
                }
            }
        }
        public Edm.Date RequestedDeliveryDate { get; set; }
        public Edm.Date ConfirmedDeliveryDate { get; set; }
        private string _OrderQuantityUnit;
        public string OrderQuantityUnit 
        { 
            get {
                return _OrderQuantityUnit;
            }
            set {
                if(value == null)
                {
                    throw new ValidationException("OrderQuantityUnit cannot be null and must have a value.");
                }
                if(value.Length > 3)
                {
                    throw new ValidationException("OrderQuantityUnit cannot be longer than 3 characters.");
                }
                else
                {
                    _OrderQuantityUnit = value;
                }
            }
        }
        private string _OrderQuantitySAPUnit;
        public string OrderQuantitySAPUnit 
        { 
            get {
                return _OrderQuantitySAPUnit;
            }
            set {
                if(value == null)
                {
                    throw new ValidationException("OrderQuantitySAPUnit cannot be null and must have a value.");
                }
                if(value.Length > 3)
                {
                    throw new ValidationException("OrderQuantitySAPUnit cannot be longer than 3 characters.");
                }
                else
                {
                    _OrderQuantitySAPUnit = value;
                }
            }
        }
        private string _OrderQuantityISOUnit;
        public string OrderQuantityISOUnit 
        { 
            get {
                return _OrderQuantityISOUnit;
            }
            set {
                if(value == null)
                {
                    throw new ValidationException("OrderQuantityISOUnit cannot be null and must have a value.");
                }
                if(value.Length > 3)
                {
                    throw new ValidationException("OrderQuantityISOUnit cannot be longer than 3 characters.");
                }
                else
                {
                    _OrderQuantityISOUnit = value;
                }
            }
        }
        public decimal ScheduleLineOrderQuantity { get; set; }
        public decimal ConfdOrderQtyByMatlAvailCheck { get; set; }
        public decimal DeliveredQtyInOrderQtyUnit { get; set; }
        public decimal OpenConfdDelivQtyInOrdQtyUnit { get; set; }
        public decimal CorrectedQtyInOrderQtyUnit { get; set; }
        private string _DelivBlockReasonForSchedLine;
        public string DelivBlockReasonForSchedLine 
        { 
            get {
                return _DelivBlockReasonForSchedLine;
            }
            set {
                if(value == null)
                {
                    throw new ValidationException("DelivBlockReasonForSchedLine cannot be null and must have a value.");
                }
                if(value.Length > 2)
                {
                    throw new ValidationException("DelivBlockReasonForSchedLine cannot be longer than 2 characters.");
                }
                else
                {
                    _DelivBlockReasonForSchedLine = value;
                }
            }
        }
        protected override Dictionary<string, List<string>> ReferenceKeys 
        {   
            get 
            {
                var result = new Dictionary<string, List<string>>();
                result.Add("PrimaryKey", new List<string>() {"SalesOrder","SalesOrderItem","ScheduleLine"});

                return result;
            }
        }


    }
}

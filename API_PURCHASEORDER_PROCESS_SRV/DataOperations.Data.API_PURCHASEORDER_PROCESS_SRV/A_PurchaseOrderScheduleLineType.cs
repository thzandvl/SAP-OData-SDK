//EntityType AutoGenerated by tool
using Microsoft.Extensions.DependencyInjection;
using System.ComponentModel.DataAnnotations;
using DataOperations.OData; 
using DataOperations; 

namespace API_PURCHASEORDER_PROCESS_SRV
{

    public class A_PurchaseOrderScheduleLineType : BaseDTOWithIDAndETag
    {
        private string _PurchasingDocument;
        public string PurchasingDocument 
        { 
            get {
                return _PurchasingDocument;
            }
            set {
                if(value == null)
                {
                    throw new ValidationException("PurchasingDocument cannot be null and must have a value.");
                }
                if(value.Length > 10)
                {
                    throw new ValidationException("PurchasingDocument cannot be longer than 10 characters.");
                }
                else
                {
                    _PurchasingDocument = value;
                }
            }
        }
        private string _PurchasingDocumentItem;
        public string PurchasingDocumentItem 
        { 
            get {
                return _PurchasingDocumentItem;
            }
            set {
                if(value == null)
                {
                    throw new ValidationException("PurchasingDocumentItem cannot be null and must have a value.");
                }
                if(value.Length > 5)
                {
                    throw new ValidationException("PurchasingDocumentItem cannot be longer than 5 characters.");
                }
                else
                {
                    _PurchasingDocumentItem = value;
                }
            }
        }
        private string _ScheduleLine;
        public string ScheduleLine 
        { 
            get {
                return _ScheduleLine;
            }
            set {
                if(value == null)
                {
                    throw new ValidationException("ScheduleLine cannot be null and must have a value.");
                }
                if(value.Length > 4)
                {
                    throw new ValidationException("ScheduleLine cannot be longer than 4 characters.");
                }
                else
                {
                    _ScheduleLine = value;
                }
            }
        }
        private string _DelivDateCategory;
        public string DelivDateCategory 
        { 
            get {
                return _DelivDateCategory;
            }
            set {
                if(value == null)
                {
                    throw new ValidationException("DelivDateCategory cannot be null and must have a value.");
                }
                if(value.Length > 1)
                {
                    throw new ValidationException("DelivDateCategory cannot be longer than 1 characters.");
                }
                else
                {
                    _DelivDateCategory = value;
                }
            }
        }
        public Edm.Date ScheduleLineDeliveryDate { get; set; }
        private string _PurchaseOrderQuantityUnit;
        public string PurchaseOrderQuantityUnit 
        { 
            get {
                return _PurchaseOrderQuantityUnit;
            }
            set {
                if(value == null)
                {
                    throw new ValidationException("PurchaseOrderQuantityUnit cannot be null and must have a value.");
                }
                if(value.Length > 3)
                {
                    throw new ValidationException("PurchaseOrderQuantityUnit cannot be longer than 3 characters.");
                }
                else
                {
                    _PurchaseOrderQuantityUnit = value;
                }
            }
        }
        public decimal ScheduleLineOrderQuantity { get; set; }
        public Edm.TimeOfDay ScheduleLineDeliveryTime { get; set; }
        public Edm.Date SchedLineStscDeliveryDate { get; set; }
        private string _PurchaseRequisition;
        public string PurchaseRequisition 
        { 
            get {
                return _PurchaseRequisition;
            }
            set {
                if(value == null)
                {
                    throw new ValidationException("PurchaseRequisition cannot be null and must have a value.");
                }
                if(value.Length > 10)
                {
                    throw new ValidationException("PurchaseRequisition cannot be longer than 10 characters.");
                }
                else
                {
                    _PurchaseRequisition = value;
                }
            }
        }
        private string _PurchaseRequisitionItem;
        public string PurchaseRequisitionItem 
        { 
            get {
                return _PurchaseRequisitionItem;
            }
            set {
                if(value == null)
                {
                    throw new ValidationException("PurchaseRequisitionItem cannot be null and must have a value.");
                }
                if(value.Length > 5)
                {
                    throw new ValidationException("PurchaseRequisitionItem cannot be longer than 5 characters.");
                }
                else
                {
                    _PurchaseRequisitionItem = value;
                }
            }
        }
        public decimal ScheduleLineCommittedQuantity { get; set; }
        public Edm.Date PerformancePeriodStartDate { get; set; }
        public Edm.Date PerformancePeriodEndDate { get; set; }
        public DeferredEnumerable<API_PURCHASEORDER_PROCESS_SRV.A_POSubcontractingComponentType> to_SubcontractingComponent {get; set;}

        protected override Dictionary<string, List<string>> ReferenceKeys 
        {   
            get 
            {
                var result = new Dictionary<string, List<string>>();
                result.Add("PrimaryKey", new List<string>() {"PurchasingDocument","PurchasingDocumentItem","ScheduleLine"});
                result.Add("to_SubcontractingComponent", new List<string>() {"PurchasingDocument","PurchasingDocumentItem","ScheduleLine"});

                return result;
            }
        }


    }
}

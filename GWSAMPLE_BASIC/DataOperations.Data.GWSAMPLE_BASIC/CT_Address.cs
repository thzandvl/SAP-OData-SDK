//ComplexType Generated by tool
using Microsoft.Extensions.DependencyInjection;
using System.ComponentModel.DataAnnotations;
using DataOperations.OData; 
using DataOperations; 

namespace GWSAMPLE_BASIC
{

    public class CT_Address : BaseDTOWithIDAndETag
    {
        private string _City;
        public string City 
        { 
            get {
                return _City;
            }
            set {
                if(value == null)
                {
                    throw new ValidationException("City cannot be null and must have a value.");
                }
                if(value.Length > 40)
                {
                    throw new ValidationException("City cannot be longer than 40 characters.");
                }
                else
                {
                    _City = value;
                }
            }
        }
        private string _PostalCode;
        public string PostalCode 
        { 
            get {
                return _PostalCode;
            }
            set {
                if(value == null)
                {
                    throw new ValidationException("PostalCode cannot be null and must have a value.");
                }
                if(value.Length > 10)
                {
                    throw new ValidationException("PostalCode cannot be longer than 10 characters.");
                }
                else
                {
                    _PostalCode = value;
                }
            }
        }
        private string _Street;
        public string Street 
        { 
            get {
                return _Street;
            }
            set {
                if(value == null)
                {
                    throw new ValidationException("Street cannot be null and must have a value.");
                }
                if(value.Length > 60)
                {
                    throw new ValidationException("Street cannot be longer than 60 characters.");
                }
                else
                {
                    _Street = value;
                }
            }
        }
        private string _Building;
        public string Building 
        { 
            get {
                return _Building;
            }
            set {
                if(value == null)
                {
                    throw new ValidationException("Building cannot be null and must have a value.");
                }
                if(value.Length > 10)
                {
                    throw new ValidationException("Building cannot be longer than 10 characters.");
                }
                else
                {
                    _Building = value;
                }
            }
        }
        private string _Country;
        public string Country 
        { 
            get {
                return _Country;
            }
            set {
                if(value == null)
                {
                    throw new ValidationException("Country cannot be null and must have a value.");
                }
                if(value.Length > 3)
                {
                    throw new ValidationException("Country cannot be longer than 3 characters.");
                }
                else
                {
                    _Country = value;
                }
            }
        }
        private string _AddressType;
        public string AddressType 
        { 
            get {
                return _AddressType;
            }
            set {
                if(value == null)
                {
                    throw new ValidationException("AddressType cannot be null and must have a value.");
                }
                if(value.Length > 2)
                {
                    throw new ValidationException("AddressType cannot be longer than 2 characters.");
                }
                else
                {
                    _AddressType = value;
                }
            }
        }

    }
}
